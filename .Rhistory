}
else if (x >= 1e3) {
chrs <- strsplit(format(x, scientific=12), split="")[[1]];
len <- chrs[seq(1,length(chrs)-3)] %>% length();
rem <- chrs[seq(1,length(chrs)-2)];
rem <- append(rem, ".", after = len) %>% append("K");
}
else {
return(x);
}
return(str_c(sign, paste(rem, sep="", collapse=""), sep = ""));
}
else return(NA);
}
si_vec <- function(x) {
sapply(x, FUN=si_num);
}
country_sorted_by_cases <- dt %>%
group_by(`country_region`, Date) %>%
summarise(cumulative_cases = sum(cumulative_cases)) %>%
ungroup() %>%
group_by(country_region) %>%
filter(cumulative_cases == max(cumulative_cases, na.rm = TRUE)) %>%
filter(Date == max(Date)) %>%
arrange(desc(cumulative_cases)) %>%
pull(country_region)
us_state_sorted_by_cases <- us_dt %>%
group_by(state) %>%
filter(cumulative_cases == max(cumulative_cases, na.rm = TRUE)) %>%
filter(Date == max(Date)) %>%
arrange(desc(cumulative_cases)) %>%
pull(state)
c25 <- rep (c(
"dodgerblue2", "#E31A1C", # red
"green4",
"#6A3D9A", # purple
"#FF7F00", # orange
"black", #"gold1",
"skyblue2", "#FB9A99", # lt pink
"palegreen2",
"#CAB2D6", # lt purple
"#FDBF6F", # lt orange
"gray70", #"khaki2",
"maroon", "orchid1", "deeppink1", "blue1", "steelblue4",
"darkturquoise", "green1", #"yellow4", "yellow3",
"darkorange4", "brown"
),7)
names(c25) <- country_sorted_by_cases
country_color <- c25[1:length(country_sorted_by_cases)]
names(c25) <- us_state_sorted_by_cases
us_state_color <- c25[1:length(us_state_sorted_by_cases)]
############# AU HERE
filtered_au_data <- function(s){
## s <- c("Alaska","Arizona","Arkansas","California")
# df <-
au_dt %>%
filter(state %in% s, cumulative_cases != 0) %>%
group_by(state) %>%
mutate(first_day = min(Date)) %>%
pivot_wider(names_from = "Date", values_from = "cumulative_cases") %>%
pivot_longer(cols = starts_with("2020-"), names_to = "Date", values_to = "cumulative_cases") %>%
arrange(state,Date) %>%
mutate(Date = as.Date(Date), passed_days = Date - first_day,
incident_cases = ifelse(is.na(lag(cumulative_cases)), cumulative_cases , cumulative_cases - lag(cumulative_cases))) %>%
ungroup() %>%
filter(passed_days >= 0)
}
plot_day_passed_day_au <- function(df, m){
if(identical(m, "Cumulative Cases")){
measure_s <- sym("cumulative_cases")
}else{
measure_s <- sym("incident_cases")
}
df_new <- df %>%
filter(!is.nan(!!measure_s), !!measure_s>=0, !is.na(!!measure_s))
df_end <- df_new %>%
group_by(state) %>%
filter(Date == max(Date-1)) %>%
ungroup()
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))+
scale_colour_manual(values = us_state_color)+
labs (caption = str_c("\n","By: @behrooz_hm @yurisyt / Data: Tim Churches (UNSW) & John Hopkins University"),
x = "Days since the First Case Reported from each State") +
labs(title = str_c ("COVID-19 Cases @ ", Sys.time()," AEDT", "\n","(Y-axis is logged)"),
y = "Number of Reported Cases - Log Scale")+
scale_y_log10(labels = si_vec, breaks = c(0,5,10,50,100,250,500,1000,2500,5000, 10000,25000,50000,100000))
}
plot_per_capita_au <- function(df, m){
if(identical(m, "Cumulative Cases")){
measure_s <- sym("cumulative_cases")
}else{
measure_s <- sym("incident_cases")
}
df_new <- df %>%
mutate(`cases_per_capita` = !!measure_s/population*10000000) %>%
filter(!is.nan(`cases_per_capita`), !is.na(`cases_per_capita`), `cases_per_capita`>=0)
df_end <- df_new %>%
group_by(state) %>%
filter(Date == max(Date-1)) %>%
ungroup()
df_new %>%
ggplot(aes(x = passed_days, y = `cases_per_capita`, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))+
scale_colour_manual(values = us_state_color)+
labs (
#subtitle  = str_c("By: @behrooz_hm @yurisyt"),
caption = str_c("\n","By: @behrooz_hm @yurisyt / Data: Tim Churches (UNSW) & John Hopkins University"),
x = "Days since the First Case Reported from each State")+
labs(title = str_c ("Per Capita COVID-19 Cases @ ", Sys.time()," AEDT", "\n","(Y-axis is logged)"),
y = "Number of Reported Cases Per 10 Million of Population - Log Scale")+
scale_y_log10(labels = si_vec, breaks = c(0,5,10,50,100,250,500,1000,2500,5000, 10000,25000,50000,100000))
}
runApp()
s <- c("Victoria", "Queensland")
## s <- c("Victoria", "Queensland")
# df <-
au_dt %>%
filter(state %in% s, cumulative_cases != 0) %>%
group_by(state) %>%
mutate(first_day = min(Date)) %>%
pivot_wider(names_from = "Date", values_from = "cumulative_cases") %>%
pivot_longer(cols = starts_with("2020-"), names_to = "Date", values_to = "cumulative_cases") %>%
arrange(state,Date) %>%
mutate(Date = as.Date(Date), passed_days = Date - first_day,
incident_cases = ifelse(is.na(lag(cumulative_cases)), cumulative_cases , cumulative_cases - lag(cumulative_cases))) %>%
ungroup() %>%
filter(passed_days >= 0)
## s <- c("Victoria", "Queensland")
df <-
au_dt %>%
filter(state %in% s, cumulative_cases != 0) %>%
group_by(state) %>%
mutate(first_day = min(Date)) %>%
pivot_wider(names_from = "Date", values_from = "cumulative_cases") %>%
pivot_longer(cols = starts_with("2020-"), names_to = "Date", values_to = "cumulative_cases") %>%
arrange(state,Date) %>%
mutate(Date = as.Date(Date), passed_days = Date - first_day,
incident_cases = ifelse(is.na(lag(cumulative_cases)), cumulative_cases , cumulative_cases - lag(cumulative_cases))) %>%
ungroup() %>%
filter(passed_days >= 0)
df_new <- df %>%
filter(!is.nan(!!measure_s), !!measure_s>=0, !is.na(!!measure_s))
df_end <- df_new %>%
group_by(state) %>%
filter(Date == max(Date-1)) %>%
ungroup()
measure_s <- sym("cumulative_cases")
if(identical(m, "Cumulative Cases")){
measure_s <- sym("cumulative_cases")
}else{
measure_s <- sym("incident_cases")
}
m = "Cumulative Cases"
if(identical(m, "Cumulative Cases")){
measure_s <- sym("cumulative_cases")
}else{
measure_s <- sym("incident_cases")
}
df_new <- df %>%
filter(!is.nan(!!measure_s), !!measure_s>=0, !is.na(!!measure_s))
df_end <- df_new %>%
group_by(state) %>%
filter(Date == max(Date-1)) %>%
ungroup()
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))+
scale_colour_manual(values = us_state_color)+
labs (caption = str_c("\n","By: @behrooz_hm @yurisyt / Data: Tim Churches (UNSW) & John Hopkins University"),
x = "Days since the First Case Reported from each State") +
labs(title = str_c ("COVID-19 Cases @ ", Sys.time()," AEDT", "\n","(Y-axis is logged)"),
y = "Number of Reported Cases - Log Scale")+
scale_y_log10(labels = si_vec, breaks = c(0,5,10,50,100,250,500,1000,2500,5000, 10000,25000,50000,100000))
df_new
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50))
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))
au_state_sorted_by_cases <- au_dt %>%
group_by(state) %>%
filter(cumulative_cases == max(cumulative_cases, na.rm = TRUE)) %>%
filter(Date == max(Date)) %>%
arrange(desc(cumulative_cases)) %>%
pull(state)
names(c25) <- au_state_sorted_by_cases
au_state_color <- c25[1:length(au_state_sorted_by_cases)]
runApp()
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))+
scale_colour_manual(values = au_state_color)+
labs (caption = str_c("\n","By: @behrooz_hm @yurisyt / Data: Tim Churches (UNSW) & John Hopkins University"),
x = "Days since the First Case Reported from each State") +
labs(title = str_c ("COVID-19 Cases @ ", Sys.time()," AEDT", "\n","(Y-axis is logged)"),
y = "Number of Reported Cases - Log Scale")+
scale_y_log10(labels = si_vec, breaks = c(0,5,10,50,100,250,500,1000,2500,5000, 10000,25000,50000,100000))
df_new %>%
ggplot(aes(x = passed_days, y = `cases_per_capita`, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))+
scale_colour_manual(values = au_state_color)+
labs (
#subtitle  = str_c("By: @behrooz_hm @yurisyt"),
caption = str_c("\n","By: @behrooz_hm @yurisyt / Data: Tim Churches (UNSW) & John Hopkins University"),
x = "Days since the First Case Reported from each State")+
labs(title = str_c ("Per Capita COVID-19 Cases @ ", Sys.time()," AEDT", "\n","(Y-axis is logged)"),
y = "Number of Reported Cases Per 10 Million of Population - Log Scale")+
scale_y_log10(labels = si_vec, breaks = c(0,5,10,50,100,250,500,1000,2500,5000, 10000,25000,50000,100000))
runApp()
rsconnect::setAccountInfo(name='behroozh',
token='823A33033F73A177F38BB8F0BA9B9786',
secret='Nzzulxz0poQBb9+t+zYrQ+SNt1a0VmX5JhX1gfpm')
runApp()
au_state_sorted_by_cases
s<- au_state_sorted_by_cases
## s <- c("Victoria", "Queensland")
#  df <-
au_dt %>%
filter(state %in% s, cumulative_cases != 0) %>%
group_by(state) %>%
mutate(first_day = min(Date)) %>%
pivot_wider(names_from = "Date", values_from = "cumulative_cases") %>%
pivot_longer(cols = starts_with("2020-"), names_to = "Date", values_to = "cumulative_cases") %>%
arrange(state,Date) %>%
mutate(Date = as.Date(Date), passed_days = Date - first_day,
incident_cases = ifelse(is.na(lag(cumulative_cases)), cumulative_cases , cumulative_cases - lag(cumulative_cases))) %>%
ungroup() %>%
filter(passed_days >= 0)
filtered_au_data <- function(s){
## s <- c("Victoria", "Queensland")
#  df <-
au_dt %>%
filter(state %in% s, cumulative_cases != 0) %>%
group_by(state) %>%
mutate(first_day = min(Date)) %>%
pivot_wider(names_from = "Date", values_from = "cumulative_cases") %>%
pivot_longer(cols = starts_with("2020-"), names_to = "Date", values_to = "cumulative_cases") %>%
arrange(state,Date) %>%
mutate(Date = as.Date(Date), passed_days = Date - first_day,
incident_cases = ifelse(is.na(lag(cumulative_cases)), cumulative_cases , cumulative_cases - lag(cumulative_cases))) %>%
ungroup() %>%
filter(passed_days >= 0)
}
df_new <- df %>%
filter(!is.nan(!!measure_s), !!measure_s>=0, !is.na(!!measure_s))
df_end <- df_new %>%
group_by(state) %>%
filter(Date == max(Date-1)) %>%
ungroup()
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))+
scale_colour_manual(values = au_state_color)+
labs (caption = str_c("\n","By: @behrooz_hm @yurisyt / Data: Tim Churches (UNSW) & John Hopkins University"),
x = "Days since the First Case Reported from each State") +
labs(title = str_c ("COVID-19 Cases @ ", Sys.time()," AEDT", "\n","(Y-axis is logged)"),
y = "Number of Reported Cases - Log Scale")+
scale_y_log10(labels = si_vec, breaks = c(0,5,10,50,100,250,500,1000,2500,5000, 10000,25000,50000,100000))
## s <- c("Victoria", "Queensland")
df <-
au_dt %>%
filter(state %in% s, cumulative_cases != 0) %>%
group_by(state) %>%
mutate(first_day = min(Date)) %>%
pivot_wider(names_from = "Date", values_from = "cumulative_cases") %>%
pivot_longer(cols = starts_with("2020-"), names_to = "Date", values_to = "cumulative_cases") %>%
arrange(state,Date) %>%
mutate(Date = as.Date(Date), passed_days = Date - first_day,
incident_cases = ifelse(is.na(lag(cumulative_cases)), cumulative_cases , cumulative_cases - lag(cumulative_cases))) %>%
ungroup() %>%
filter(passed_days >= 0)
df_new <- df %>%
filter(!is.nan(!!measure_s), !!measure_s>=0, !is.na(!!measure_s))
df_end <- df_new %>%
group_by(state) %>%
filter(Date == max(Date-1)) %>%
ungroup()
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))+
scale_colour_manual(values = au_state_color)+
labs (caption = str_c("\n","By: @behrooz_hm @yurisyt / Data: Tim Churches (UNSW) & John Hopkins University"),
x = "Days since the First Case Reported from each State") +
labs(title = str_c ("COVID-19 Cases @ ", Sys.time()," AEDT", "\n","(Y-axis is logged)"),
y = "Number of Reported Cases - Log Scale")+
scale_y_log10(labels = si_vec, breaks = c(0,5,10,50,100,250,500,1000,2500,5000, 10000,25000,50000,100000))
runApp()
au_du$state
au_dt$state
au_dt$state %>% unique ()
df_new$state %>% unique ()
df_new <- df %>%
filter(!is.nan(!!measure_s), !!measure_s>=0, !is.na(!!measure_s))
df_end <- df_new %>%
group_by(state) %>%
filter(Date == max(Date-1)) %>%
ungroup()
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))+
scale_colour_manual(values = au_state_color)+
labs (caption = str_c("\n","By: @behrooz_hm @yurisyt / Data: Tim Churches (UNSW) & John Hopkins University"),
x = "Days since the First Case Reported from each State") +
labs(title = str_c ("COVID-19 Cases @ ", Sys.time()," AEDT", "\n","(Y-axis is logged)"),
y = "Number of Reported Cases - Log Scale")+
scale_y_log10(labels = si_vec, breaks = c(0,5,10,50,100,250,500,1000,2500,5000, 10000,25000,50000,100000))
df_new [df_new$Date == max (df_new$Date)]
df_new [df_new$Date == max (df_new$Date),]
if(identical(m, "Cumulative Cases")){
measure_s <- sym("cumulative_cases")
}else{
measure_s <- sym("incident_cases")
}
df_new <- df %>%
mutate(`cases_per_capita` = !!measure_s/population*10000000) %>%
filter(!is.nan(`cases_per_capita`), !is.na(`cases_per_capita`), `cases_per_capita`>=0)
df_end <- df_new %>%
group_by(state) %>%
filter(Date == max(Date-1)) %>%
ungroup()
df_new %>%
ggplot(aes(x = passed_days, y = `cases_per_capita`, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))+
scale_colour_manual(values = au_state_color)+
labs (
#subtitle  = str_c("By: @behrooz_hm @yurisyt"),
caption = str_c("\n","By: @behrooz_hm @yurisyt / Data: Tim Churches (UNSW) & John Hopkins University"),
x = "Days since the First Case Reported from each State")+
labs(title = str_c ("Per Capita COVID-19 Cases @ ", Sys.time()," AEDT", "\n","(Y-axis is logged)"),
y = "Number of Reported Cases Per 10 Million of Population - Log Scale")+
scale_y_log10(labels = si_vec, breaks = c(0,5,10,50,100,250,500,1000,2500,5000, 10000,25000,50000,100000))
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))+
scale_colour_manual(values = au_state_color)+
labs (caption = str_c("\n","By: @behrooz_hm @yurisyt / Data: Tim Churches (UNSW) & John Hopkins University"),
x = "Days since the First Case Reported from each State") +
labs(title = str_c ("COVID-19 Cases @ ", Sys.time()," AEDT", "\n","(Y-axis is logged)"),
y = "Number of Reported Cases - Log Scale")+
scale_y_log10(labels = si_vec, breaks = c(0,5,10,50,100,250,500,1000,2500,5000, 10000,25000,50000,100000))
measure_s <- sym("cumulative_cases")
if(identical(m, "Cumulative Cases")){
measure_s <- sym("cumulative_cases")
}else{
measure_s <- sym("incident_cases")
}
df_new <- df %>%
filter(!is.nan(!!measure_s), !!measure_s>=0, !is.na(!!measure_s))
df_end <- df_new %>%
group_by(state) %>%
filter(Date == max(Date-1)) %>%
ungroup()
df_new %>%
ggplot(aes(x = passed_days, y = !!measure_s, group = state, color = state))+
geom_line()+
geom_point(size = 0.4)+
geom_text_repel(data = df_end, aes(label = state), size = 4, min.segment.length = 0)+
scale_x_continuous(limits = c(0, 50)) +
theme(legend.position = "none",
axis.text = element_text(size = 12),
axis.title = element_text(size = 15),
title = element_text(size = 17))+
scale_colour_manual(values = au_state_color)+
labs (caption = str_c("\n","By: @behrooz_hm @yurisyt / Data: Tim Churches (UNSW) & John Hopkins University"),
x = "Days since the First Case Reported from each State") +
labs(title = str_c ("COVID-19 Cases @ ", Sys.time()," AEDT", "\n","(Y-axis is logged)"),
y = "Number of Reported Cases - Log Scale")+
scale_y_log10(labels = si_vec, breaks = c(0,5,10,50,100,250,500,1000,2500,5000, 10000,25000,50000,100000))
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
install.packages("wbstats")
shiny::runApp()
install.packages("uuid")
runApp()
runApp()
library(rsconnect)
rsconnect::setAccountInfo(name='behroozh',
token='823A33033F73A177F38BB8F0BA9B9786',
secret='<SECRET>')
rsconnect::setAccountInfo(name='behroozh',
token='823A33033F73A177F38BB8F0BA9B9786',
secret='<SECRET>')
library(rsconnect)
rsconnect::setAccountInfo(name='behroozh',
token='823A33033F73A177F38BB8F0BA9B9786',
secret='<SECRET>')
shiny::runApp()
runApp()
runApp()
?strong
runApp()
runApp()
rsconnect::setAccountInfo(name='behroozh',
token='823A33033F73A177F38BB8F0BA9B9786',
secret='Nzzulxz0poQBb9+t+zYrQ+SNt1a0VmX5JhX1gfpm')
rsconnect::setAccountInfo(name='behroozh',
token='823A33033F73A177F38BB8F0BA9B9786',
secret='Nzzulxz0poQBb9+t+zYrQ+SNt1a0VmX5JhX1gfpm')
runApp()
runApp()
shiny::runApp()
View(wb_dt)
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
